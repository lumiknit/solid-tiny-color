{"version":3,"file":"index.js","sources":["../../src/utils.ts","../../src/color.ts","../../src/style.ts","../../src/ColorPointer.tsx","../../src/ColorBoard.tsx","../../src/SLTriangle.tsx","../../src/HueWheel.tsx","../../src/SVSquare.tsx","../../src/Slider.tsx","../../src/HSCircle.tsx","../../src/HSLWheel.tsx","../../src/HSVWheel.tsx"],"sourcesContent":["export const degToRad: number = Math.PI / 180;\nexport const clamp = (value: number, min: number, max: number): number =>\n\tMath.min(Math.max(value, min), max);\nexport const cross = (v: number) => Math.min(v, 1 - v);\n","import { cross } from './utils';\n\ntype Num3 = [number, number, number];\n\nexport type RGB = Num3; // r, g, b: 0-255\nexport type HSL = Num3; // h: 0-360, s, l: 0.0-1.0\nexport type HSV = Num3; // h: 0-360, s, v: 0.0-1.0\n\nconst multConst = (k: number, [a, b, c]: Num3): Num3 => [k * a, k * b, k * c];\n\nexport const rgbToGrayscale = ([r, g, b]: RGB): number =>\n\tr * 0.299 + g * 0.587 + b * 0.114;\n\nexport const rgbToHSL = (rgb: RGB): HSL => {\n\tconst [r, g, b] = multConst(1 / 255, rgb),\n\t\tv = Math.max(r, g, b),\n\t\tc = v - Math.min(r, g, b),\n\t\tf = 1 - Math.abs(v + v - c - 1),\n\t\th =\n\t\t\tc && (v == r ? (g - b) / c : v == g ? 2 + (b - r) / c : 4 + (r - g) / c);\n\treturn [60 * (h < 0 ? h + 6 : h), f ? c / f : 0, (v + v - c) / 2];\n};\n\nexport const rgbToHSV = (rgb: RGB): HSV => {\n\tconst [r, g, b] = multConst(1 / 255, rgb),\n\t\tv = Math.max(r, g, b),\n\t\tc = v - Math.min(r, g, b),\n\t\th =\n\t\t\tc && (v == r ? (g - b) / c : v == g ? 2 + (b - r) / c : 4 + (r - g) / c);\n\treturn [60 * (h < 0 ? h + 6 : h), v && c / v, v];\n};\n\nexport const hsvToRGB = ([h, s, v]: HSV): RGB => {\n\tconst f = (n: number, k = (n + h / 60) % 6) =>\n\t\tv - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn multConst(255, [f(5), f(3), f(1)]);\n};\n\nexport const hslToRGB = ([h, s, l]: HSL): RGB => {\n\tconst a = s * cross(l),\n\t\tf = (n: number, k = (n + h / 30) % 12) =>\n\t\t\tl - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn multConst(255, [f(0), f(8), f(4)]);\n};\n\nexport const hslToHSV = ([h, s, l]: HSL, v = s * cross(l) + l): HSV => [\n\th,\n\tv ? 2 - (2 * l) / v : 0,\n\tv,\n];\n\nexport const hsvToHSL = (\n\t[h, s, v]: HSV,\n\tl = v - (v * s) / 2,\n\tm = cross(l)\n): HSL => [h, m ? (v - l) / m : 0, l];\n\nexport const hslToStyle = ([h, s, l]: HSL): string =>\n\t`hsl(${h} ${100 * s}%${100 * l}%)`;\n\nexport const hsvToStyle = (hsv: HSV): string => hslToStyle(hsvToHSL(hsv));\n\nexport const rgbToStyle = (rgb: RGB): string =>\n\t`rgb(${rgb[0]},${rgb[1]},${rgb[2]})`;\n\nexport const rgbToHash = (rgb: RGB): string =>\n\t`#${rgb.map((c) => Math.floor(c).toString(16).padStart(2, '0')).join('')}`;\n\nexport const luminance = (rgb: RGB): number => {\n\tconst [r, g, b] = rgb\n\t\t.map((c) => c / 255)\n\t\t.map((c) => (c <= 0.03928 ? c / 12.92 : ((c + 0.055) / 1.055) ** 2));\n\treturn r * 0.2126 + g * 0.7152 + b * 0.0722;\n};\n\nexport const contrast = (rgb1: RGB, rgb2: RGB): number => {\n\tconst l1 = luminance(rgb1),\n\t\tl2 = luminance(rgb2);\n\treturn l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n};\n","import { JSX } from 'solid-js';\n\nexport const styleWH100: JSX.CSSProperties = {\n\twidth: '100%',\n\theight: '100%',\n};\n\nexport const styleAbsLT0: JSX.CSSProperties = {\n\tposition: 'absolute',\n\tleft: '0',\n\ttop: '0',\n};\n\nexport const styleBgCheckerboard = (\n\tcolor1: string,\n\tcolor2: string,\n\tsize = 16\n): JSX.CSSProperties => ({\n\tbackground: `repeating-conic-gradient(${color1} 0% 25%, ${color2} 25% 50%)`,\n\t'background-size': `${size}px ${size}px`,\n});\n\nexport const styleNoTouchAction: JSX.CSSProperties = {\n\t'touch-action': 'none',\n\t'-webkit-touch-callout': 'none',\n\t'-webkit-tap-highlight-color': 'transparent',\n\t'-webkit-user-select': 'none',\n\t'-khtml-user-select': 'none',\n\t'-moz-user-select': 'none',\n\t'-ms-user-select': 'none',\n\t'user-select': 'none',\n};\n\nconst gd = (deg: number) => `hsl(${deg},100%,50%) ${deg}deg`;\nexport const gradHueConic: string = `conic-gradient(${[0, 120, 240, 360].map(gd).join()})`;\n","import { Component, JSX, mergeProps } from 'solid-js';\nimport { HSV, hsvToRGB, rgbToGrayscale, rgbToStyle } from './color';\n\ntype Props = {\n\tpos: [number, number]; // 0.0 to 1.0\n\n\t/** Size of pointer */\n\tsize?: string;\n\n\t/** Fill color */\n\thsv: HSV;\n\n\t/** Override styles */\n\tstyle?: JSX.CSSProperties;\n\n\t/** Override class */\n\tclass?: string;\n};\n\nconst ColorPointer: Component<Props> = (props_) => {\n\tconst props = mergeProps({ size: '10px' }, props_);\n\tconst rgb = () => hsvToRGB(props.hsv);\n\treturn (\n\t\t<div\n\t\t\tclass={props.class}\n\t\t\tstyle={{\n\t\t\t\t'pointer-events': 'none', // Prevent pointer event to this div\n\t\t\t\tposition: 'absolute',\n\t\t\t\tleft: `${props.pos[0] * 100}%`,\n\t\t\t\ttop: `${props.pos[1] * 100}%`,\n\t\t\t\twidth: props.size,\n\t\t\t\theight: props.size,\n\t\t\t\tborder: `2px solid ${rgbToGrayscale(rgb()) > 127 ? 'black' : 'white'}`,\n\t\t\t\t'border-radius': '50%',\n\t\t\t\ttransform: 'translate(-50%, -50%)',\n\t\t\t\t'background-color': rgbToStyle(rgb()),\n\t\t\t\t...props.style,\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default ColorPointer;\n","import { Component, JSX, splitProps } from 'solid-js';\nimport { HSV } from './color';\nimport { styleNoTouchAction } from './style';\nimport ColorPointer from './ColorPointer';\nimport { clamp } from './utils';\n\nexport type ColorProps = {\n\t/** Current selected color */\n\thsv: HSV;\n\n\t/** Event handler for color is picked.\n\t * @param hsl Picked color.\n\t */\n\tonHSVChange?: (hsv: HSV) => void;\n\n\t/** Pointer style */\n\tpointerStyle?: JSX.CSSProperties;\n\n\t/** Pointer class */\n\tpointerClass?: string;\n} & JSX.IntrinsicElements['div'];\n\n/**\n * ColorBoard\n */\nexport type ColorBoardProps = {\n\t/** Current selected color */\n\thsv: HSV;\n\n\t/** Event handler for specific xy is picked.\n\t * @param pos Position of picked. Each [x, y] is between 0.0 to 1.0.\n\t * @param init If true, this is down event, not move.\n\t * @returns If true or undefined, successfully color was picked, and capture the pointer.\n\t */\n\tonPick?: (x: number, y: number, init?: boolean) => boolean | void;\n\n\t/**\n\t * Color to position handler.\n\t * @param hsv Color to convert.\n\t * @returns Position of color. Each [x, y] is between 0.0 to 1.0.\n\t */\n\tcolorToPos: (hsv: HSV) => [number, number];\n\n\t/** Pointer style */\n\tpointerStyle?: JSX.CSSProperties;\n\n\t/** Pointer class */\n\tpointerClass?: string;\n} & JSX.IntrinsicElements['div'];\n\n/**\n * Color board component\n * This is a wrapper of all color board.\n */\nexport const ColorBoard: Component<ColorBoardProps> = (props) => {\n\tlet ref: HTMLDivElement;\n\tconst [locals, others] = splitProps(props, [\n\t\t'hsv',\n\t\t'onPick',\n\t\t'colorToPos',\n\t\t'pointerStyle',\n\t\t'pointerClass',\n\t]);\n\tconst handlePointerEvent: JSX.EventHandler<HTMLDivElement, PointerEvent> = (\n\t\te\n\t) => {\n\t\tif (!props.onPick || e.buttons === 0) return;\n\t\t// Check pointer is down\n\t\tconst x = clamp(e.offsetX / e.currentTarget.offsetWidth, 0, 1),\n\t\t\ty = clamp(e.offsetY / e.currentTarget.offsetHeight, 0, 1);\n\t\tif (props.onPick(x, y, e.type === 'pointerdown') !== false) {\n\t\t\tref.setPointerCapture(e.pointerId);\n\t\t} else {\n\t\t\tref.releasePointerCapture(e.pointerId);\n\t\t}\n\t};\n\treturn (\n\t\t<div\n\t\t\t{...others}\n\t\t\tref={ref!}\n\t\t\tstyle={{\n\t\t\t\tposition: 'relative',\n\t\t\t\t...styleNoTouchAction,\n\t\t\t\t...(typeof props.style === 'object' ? props.style : {}),\n\t\t\t}}\n\t\t\tonPointerDown={handlePointerEvent}\n\t\t\tonPointerMove={handlePointerEvent}\n\t\t>\n\t\t\t{props.children}\n\t\t\t<ColorPointer\n\t\t\t\tpos={props.colorToPos(props.hsv)}\n\t\t\t\thsv={props.hsv}\n\t\t\t\tstyle={locals.pointerStyle}\n\t\t\t\tclass={locals.pointerClass}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import { Component, onMount } from 'solid-js';\nimport { ColorBoard, ColorProps } from './ColorBoard';\nimport { styleAbsLT0, styleWH100 } from './style';\nimport { HSL, hslToHSV, hsvToHSL } from './color';\nimport { cross } from './utils';\n\nconst renderSLTriangle = (\n\tctx: CanvasRenderingContext2D,\n\twidth: number,\n\theight: number\n) => {\n\tctx.clearRect(0, 0, width, height);\n\tctx.fillStyle = '#fff';\n\tfor (let sy = 0; sy < height; sy++) {\n\t\tconst yr = sy / height;\n\t\tconst w = Math.round(2 * width * Math.min(yr, 1 - yr));\n\t\tfor (let sx = 0; sx < w; sx++) {\n\t\t\tconst x = sx / width;\n\t\t\tconst y = 1 - yr + x / 2;\n\n\t\t\t// Blend s\n\t\t\tconst r = 255 * y;\n\t\t\tconst gb = r * (1 - x / y);\n\n\t\t\tctx.fillStyle = `rgb(${r},${gb},${gb})`;\n\t\t\tctx.fillRect(sx, sy, 1, 1);\n\t\t}\n\t\tif (width - w > 0) ctx.fillRect(w, sy, width - w, 1);\n\t}\n};\n\nconst SLTriangle: Component<ColorProps> = (props) => {\n\tlet canvasRef: HTMLCanvasElement;\n\n\tconst hue = () => props.hsv[0];\n\n\tonMount(() => {\n\t\t// Render Red + SV Triangle\n\t\tconst ctx = canvasRef.getContext('2d');\n\t\tif (ctx) renderSLTriangle(ctx, canvasRef.width, canvasRef.height);\n\t});\n\n\tconst cp = 'polygon(0 0, 0 100%, 100% 50%)';\n\n\treturn (\n\t\t<ColorBoard\n\t\t\t{...props}\n\t\t\tstyle={{\n\t\t\t\t...(typeof props.style === 'object' ? props.style : {}),\n\t\t\t\t'clip-path': cp,\n\t\t\t}}\n\t\t\tonPick={(x, y, init) => {\n\t\t\t\tlet w = 2 * cross(y);\n\t\t\t\tif (x > w) {\n\t\t\t\t\tif (init) return false;\n\t\t\t\t\t// Find the nearest point on the edge\n\t\t\t\t\t// Distance from the edge\n\t\t\t\t\tconst dx = x - w;\n\t\t\t\t\tx -= dx * 0.3;\n\t\t\t\t\tif (y > 0.5) y -= dx * 0.35;\n\t\t\t\t\telse y += dx * 0.35;\n\t\t\t\t\tw = 2 * cross(y);\n\t\t\t\t}\n\t\t\t\tif (w > 0) x /= w;\n\t\t\t\tconst newHSL: HSL = [props.hsv[0], x, 1 - y];\n\t\t\t\tprops.onHSVChange?.(hslToHSV(newHSL));\n\t\t\t\treturn true;\n\t\t\t}}\n\t\t\tcolorToPos={(hsv) => {\n\t\t\t\tconst [, s, l] = hsvToHSL(hsv);\n\t\t\t\treturn [2 * cross(l) * s, 1 - l];\n\t\t\t}}\n\t\t>\n\t\t\t<canvas\n\t\t\t\tref={canvasRef!}\n\t\t\t\twidth={32}\n\t\t\t\theight={32}\n\t\t\t\tstyle={{\n\t\t\t\t\t...styleWH100,\n\t\t\t\t\t...styleAbsLT0,\n\t\t\t\t\t'clip-path': cp,\n\t\t\t\t\tfilter: `hue-rotate(${hue()}deg)`,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</ColorBoard>\n\t);\n};\n\nexport default SLTriangle;\n","import { Component } from 'solid-js';\nimport { ColorBoard, ColorProps } from './ColorBoard';\nimport { gradHueConic, styleWH100 } from './style';\nimport { degToRad } from './utils';\n\ntype Props = {\n\t/** Stroke width ratio, percent (0.0-1.0) */\n\tstrokeWidth: number;\n} & ColorProps;\n\nconst HueWheel: Component<Props> = (props) => {\n\treturn (\n\t\t<ColorBoard\n\t\t\t{...props}\n\t\t\tonPick={(x, y) => {\n\t\t\t\tconst angle = Math.atan2(y - 0.5, x - 0.5) / degToRad;\n\t\t\t\tprops.onHSVChange?.([(angle + 450) % 360, props.hsv[1], props.hsv[2]]);\n\t\t\t}}\n\t\t\tcolorToPos={([h]) => {\n\t\t\t\tconst angle = h * degToRad;\n\t\t\t\tconst r = (1 - (100 * props.strokeWidth) / 200) / 2;\n\t\t\t\treturn [0.5 + r * Math.sin(angle), 0.5 - r * Math.cos(angle)];\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\t...styleWH100,\n\t\t\t\t\t'background-image': gradHueConic,\n\t\t\t\t\t'border-radius': '50%',\n\t\t\t\t\t'mask-image': `radial-gradient(closest-side circle at center,transparent ${99.5 - 100 * props.strokeWidth}%,black ${100 - 100 * props.strokeWidth}%)`,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</ColorBoard>\n\t);\n};\n\nexport default HueWheel;\n","import { Component } from 'solid-js';\nimport { ColorBoard, ColorProps } from './ColorBoard';\nimport { styleWH100 } from './style';\n\nconst SVSquare: Component<ColorProps> = (props) => {\n\tconst hue = () => props.hsv[0];\n\treturn (\n\t\t<ColorBoard\n\t\t\t{...props}\n\t\t\tonPick={(x, y) => {\n\t\t\t\tprops.onHSVChange?.([props.hsv[0], x, 1 - y]);\n\t\t\t}}\n\t\t\tcolorToPos={([, s, v]) => [s, 1 - v]}\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\t...styleWH100,\n\t\t\t\t\t'background-color': `hsl(${hue()}, 100%, 50%)`,\n\t\t\t\t\t'background-image': `linear-gradient(to top, #000, #0000), linear-gradient(to right, #fff, #fff0)`,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</ColorBoard>\n\t);\n};\n\nexport default SVSquare;\n","import { Component, JSX, mergeProps, Show, splitProps } from 'solid-js';\nimport { ColorBoard, ColorProps } from './ColorBoard';\nimport { styleAbsLT0, styleBgCheckerboard, styleWH100 } from './style';\nimport {\n\thslToHSV,\n\thslToStyle,\n\tHSV,\n\thsvToHSL,\n\thsvToRGB,\n\thsvToStyle,\n\tRGB,\n\trgbToHSV,\n\trgbToStyle,\n} from './color';\n\ntype Props = {\n\t/** Color map\n\t * @param hsv Current color\n\t * @param p Position. 0.0 is leftmost, 1.0 is rightmost.\n\t * @returns [color for style, color in HSV]\n\t */\n\tcolorMap: (hsv: HSV, p: number) => [string, HSV];\n\n\t/** Inverse Color map\n\t * @param color Color in HSV\n\t * @returns Position. 0.0 is leftmost, 1.0 is rightmost.\n\t */\n\tinverseColorMap: (color: HSV) => number;\n\n\t/** Background image */\n\tbackgorundStyle?: JSX.CSSProperties;\n} & ColorProps;\n\nconst Slider: Component<Props> = (props) => {\n\tconst [locals, colorProps] = splitProps(props, [\n\t\t'colorMap',\n\t\t'inverseColorMap',\n\t\t'backgorundStyle',\n\t]);\n\treturn (\n\t\t<ColorBoard\n\t\t\t{...colorProps}\n\t\t\tonPick={(x) => {\n\t\t\t\tconst hsv = locals.colorMap(colorProps.hsv, x)[1];\n\t\t\t\tcolorProps.onHSVChange?.(hsv);\n\t\t\t}}\n\t\t\tcolorToPos={(hsv) => [locals.inverseColorMap(hsv), 0.5]}\n\t\t>\n\t\t\t<Show when={locals.backgorundStyle}>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...styleAbsLT0,\n\t\t\t\t\t\t...styleWH100,\n\t\t\t\t\t\t...locals.backgorundStyle,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Show>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\t...styleAbsLT0,\n\t\t\t\t\t...styleWH100,\n\t\t\t\t\t'background-image': `linear-gradient(to right, ${[0, 0.25, 0.5, 0.75, 1].map((v) => props.colorMap(props.hsv, v)[0]).join()})`,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</ColorBoard>\n\t);\n};\n\nexport default Slider;\n\n// Derived sliders\n\nconst RGBSlider =\n\t(idx: 0 | 1 | 2): Component<ColorProps> =>\n\t(props) => {\n\t\tconst rgbUpd = (rgb: RGB, v: number) => {\n\t\t\trgb[idx] = v * 255;\n\t\t\treturn rgb;\n\t\t};\n\t\treturn (\n\t\t\t<Slider\n\t\t\t\t{...props}\n\t\t\t\tcolorMap={(hsv, p) => {\n\t\t\t\t\tconst rgb = rgbUpd(hsvToRGB(hsv), p);\n\t\t\t\t\treturn [rgbToStyle(rgb), rgbToHSV(rgb)];\n\t\t\t\t}}\n\t\t\t\tinverseColorMap={(hsv) => hsvToRGB(hsv)[idx] / 255}\n\t\t\t/>\n\t\t);\n\t};\n\nexport const RGBSliderR = RGBSlider(0);\nexport const RGBSliderG = RGBSlider(1);\nexport const RGBSliderB = RGBSlider(2);\n\nconst hMaxs = [360, 1, 1];\n\nconst HSVSlider =\n\t(idx: 0 | 1 | 2): Component<ColorProps> =>\n\t(props) => {\n\t\treturn (\n\t\t\t<Slider\n\t\t\t\t{...props}\n\t\t\t\tcolorMap={(hsv, p) => {\n\t\t\t\t\tconst z: HSV = [...hsv];\n\t\t\t\t\tz[idx] = p * hMaxs[idx];\n\t\t\t\t\treturn [hsvToStyle(z), z];\n\t\t\t\t}}\n\t\t\t\tinverseColorMap={(hsv) => hsv[idx] / hMaxs[idx]}\n\t\t\t/>\n\t\t);\n\t};\n\nexport const HSVSliderH = HSVSlider(0);\nexport const HSVSliderS = HSVSlider(1);\nexport const HSVSliderV = HSVSlider(2);\n\nconst HSLSlider =\n\t(idx: 0 | 1 | 2): Component<ColorProps> =>\n\t(props) => {\n\t\treturn (\n\t\t\t<Slider\n\t\t\t\t{...props}\n\t\t\t\tcolorMap={(hsv, p) => {\n\t\t\t\t\tconst hsl = hsvToHSL(hsv);\n\t\t\t\t\thsl[idx] = p * hMaxs[idx];\n\t\t\t\t\treturn [hslToStyle(hsl), hslToHSV(hsl)];\n\t\t\t\t}}\n\t\t\t\tinverseColorMap={(hsv) => hsvToHSL(hsv)[idx] / hMaxs[idx]}\n\t\t\t/>\n\t\t);\n\t};\n\nexport const HSLSliderH = HSLSlider(0);\nexport const HSLSliderS = HSLSlider(1);\nexport const HSLSliderL = HSLSlider(2);\n\ntype AlphaSliderProps = {\n\tbgColor1?: string;\n\tbgColor2?: string;\n\n\talpha: number;\n\tonAlphaChange?: (alpha: number) => void;\n} & ColorProps;\n\nexport const AlphaSlider: Component<AlphaSliderProps> = (props_) => {\n\tconst props = mergeProps(\n\t\t{ bgColor1: 'darkgray', bgColor2: 'lightgray' },\n\t\tprops_\n\t);\n\tconst [locals, colorProps] = splitProps(props, [\n\t\t'bgColor1',\n\t\t'bgColor2',\n\t\t'alpha',\n\t\t'onAlphaChange',\n\t\t'hsv',\n\t\t'onHSVChange',\n\t]);\n\treturn (\n\t\t<Slider\n\t\t\t{...colorProps}\n\t\t\thsv={[0, locals.alpha, 0]}\n\t\t\tonHSVChange={(hsv) => {\n\t\t\t\tprops.onAlphaChange?.(hsv[1]);\n\t\t\t}}\n\t\t\tcolorMap={(_, p) => [\n\t\t\t\t`rgba(${hsvToRGB(locals.hsv).join()},${p})`,\n\t\t\t\t[0, p, 0],\n\t\t\t]}\n\t\t\tinverseColorMap={(hsv) => hsv[1]}\n\t\t\tbackgorundStyle={styleBgCheckerboard(locals.bgColor1, locals.bgColor2)}\n\t\t/>\n\t);\n};\n","import { Component } from 'solid-js';\nimport { ColorBoard, ColorProps } from './ColorBoard';\nimport { gradHueConic, styleWH100 } from './style';\nimport { degToRad } from './utils';\n\nconst HSCircle: Component<ColorProps> = (props) => {\n\tconst blackOverlay = () => `rgba(0,0,0,${1 - props.hsv[2]})`;\n\treturn (\n\t\t<ColorBoard\n\t\t\t{...props}\n\t\t\tonPick={(x, y) => {\n\t\t\t\t// Get current value\n\t\t\t\tconst dx = x * 2 - 1;\n\t\t\t\tconst dy = y * 2 - 1;\n\t\t\t\tprops.onHSVChange?.([\n\t\t\t\t\t(Math.atan2(dy, dx) / degToRad + 450) % 360,\n\t\t\t\t\tMath.min(Math.sqrt(dx * dx + dy * dy), 1),\n\t\t\t\t\tprops.hsv[2],\n\t\t\t\t]);\n\t\t\t}}\n\t\t\tcolorToPos={([h, s]) => {\n\t\t\t\tconst angle = h * degToRad;\n\t\t\t\treturn [(Math.sin(angle) * s + 1) / 2, (-Math.cos(angle) * s + 1) / 2];\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\t...styleWH100,\n\t\t\t\t\t'background-image': `linear-gradient(${blackOverlay()},${blackOverlay()}),radial-gradient(closest-side, #ffff, #fff0),${gradHueConic}`,\n\t\t\t\t\t'border-radius': '50%',\n\t\t\t\t}}\n\t\t\t/>\n\t\t</ColorBoard>\n\t);\n};\n\nexport default HSCircle;\n","import { Component, splitProps } from 'solid-js';\nimport { ColorProps } from './ColorBoard';\nimport SLTriangle from './SLTriangle';\nimport HueWheel from './HueWheel';\nimport { styleAbsLT0, styleWH100 } from './style';\n\ntype Props = {\n\t/** Stroke width ratio, percent (0.0-1.0) */\n\tstrokeWidth: number;\n\n\t/** Enable rotation */\n\trotate?: boolean;\n} & ColorProps;\n\nconst HSLWheel: Component<Props> = (props) => {\n\tconst [local, divProps] = splitProps(props, [\n\t\t'rotate',\n\t\t'strokeWidth',\n\t\t'hsv',\n\t\t'onHSVChange',\n\t\t'children',\n\t]);\n\n\tconst rad = () => 50 * (0.99 - props.strokeWidth);\n\n\treturn (\n\t\t<div\n\t\t\t{...divProps}\n\t\t\tstyle={{\n\t\t\t\tposition: 'relative',\n\t\t\t}}\n\t\t>\n\t\t\t<HueWheel\n\t\t\t\t{...local}\n\t\t\t\tstyle={{\n\t\t\t\t\t...styleAbsLT0,\n\t\t\t\t\t...styleWH100,\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<SLTriangle\n\t\t\t\t{...local}\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tleft: `${50 - rad() / 2}%`,\n\t\t\t\t\ttop: `${50 - (rad() * Math.sqrt(3)) / 2}%`,\n\t\t\t\t\twidth: `${rad() * 1.5}%`,\n\t\t\t\t\theight: `${rad() * Math.sqrt(3)}%`,\n\t\t\t\t\ttransform: props.rotate\n\t\t\t\t\t\t? `translate(-16.7%, 0) rotate(${props.hsv[0] - 90}deg) translate(16.7%, 0)`\n\t\t\t\t\t\t: 'none',\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default HSLWheel;\n","import { Component, splitProps } from 'solid-js';\nimport { ColorProps } from './ColorBoard';\nimport SVSquare from './SVSquare';\nimport HueWheel from './HueWheel';\nimport { styleAbsLT0, styleWH100 } from './style';\n\ntype Props = {\n\t/** Stroke width ratio, percent (0.0-1.0) */\n\tstrokeWidth: number;\n\n\t/** Enable rotation */\n\trotate?: boolean;\n} & ColorProps;\n\nconst HSVWheel: Component<Props> = (props) => {\n\tconst [local, divProps] = splitProps(props, [\n\t\t'rotate',\n\t\t'strokeWidth',\n\t\t'hsv',\n\t\t'onHSVChange',\n\t\t'children',\n\t]);\n\n\tconst squareWidth = () => (100 * (0.99 - props.strokeWidth)) / Math.sqrt(2);\n\n\treturn (\n\t\t<div\n\t\t\t{...divProps}\n\t\t\tstyle={{\n\t\t\t\tposition: 'relative',\n\t\t\t}}\n\t\t>\n\t\t\t<HueWheel\n\t\t\t\t{...local}\n\t\t\t\tstyle={{\n\t\t\t\t\t...styleAbsLT0,\n\t\t\t\t\t...styleWH100,\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<SVSquare\n\t\t\t\t{...local}\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tleft: `${(100 - squareWidth()) / 2}%`,\n\t\t\t\t\ttop: `${(100 - squareWidth()) / 2}%`,\n\t\t\t\t\twidth: `${squareWidth()}%`,\n\t\t\t\t\theight: `${squareWidth()}%`,\n\t\t\t\t\ttransform: props.rotate ? `rotate(${props.hsv[0] - 45}deg)` : 'none',\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default HSVWheel;\n"],"names":["degToRad","Math","PI","clamp","value","min","max","cross","v","multConst","k","a","b","c","rgbToGrayscale","r","g","rgbToHSV","rgb","h","hsvToRGB","s","f","n","hslToHSV","l","hsvToHSL","m","hslToStyle","hsvToStyle","hsv","rgbToStyle","luminance","map","styleWH100","width","height","styleAbsLT0","position","left","top","styleBgCheckerboard","color1","color2","size","background","styleNoTouchAction","gradHueConic","deg","join","ColorPointer","props_","props","mergeProps","_el$","_tmpl$","_$effect","_p$","_v$","class","_v$2","pos","border","transform","style","e","_$className","className","t","_$style","undefined","ColorBoard","ref","locals","others","splitProps","handlePointerEvent","onPick","buttons","x","offsetX","currentTarget","offsetWidth","y","offsetY","offsetHeight","type","setPointerCapture","pointerId","releasePointerCapture","_$use","_ref$","use","_$spread","_$mergeProps","onPointerDown","onPointerMove","_$insert","children","_$createComponent","createComponent","colorToPos","pointerStyle","pointerClass","SLTriangle","canvasRef","onMount","ctx","getContext","renderSLTriangle","clearRect","fillStyle","sy","yr","w","round","sx","gb","fillRect","cp","init","dx","newHSL","onHSVChange","_$p","filter","HueWheel","angle","atan2","strokeWidth","sin","cos","SVSquare","Slider","colorProps","colorMap","inverseColorMap","Show","when","backgorundStyle","_el$2","RGBSlider","idx","p","rgbUpd","RGBSliderR","RGBSliderG","RGBSliderB","hMaxs","HSVSlider","z","HSVSliderH","HSVSliderS","HSVSliderV","HSLSlider","hsl","HSLSliderH","HSLSliderS","HSLSliderL","bgColor1","bgColor2","alpha","onAlphaChange","_","blackOverlay","dy","sqrt","local","divProps","rad","rotate","squareWidth","contrast","rgb1","rgb2","l1","l2","hslToRGB","abs","floor","toString","padStart"],"mappings":"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"}